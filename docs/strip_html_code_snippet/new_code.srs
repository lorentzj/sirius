<code class = "block"><span class = "code token keyword">fn</span><span class = "code"> </span><span class = "code token identifier">double</span><span class = "code token opencurly">{</span><span class = "code token identifier type">T</span><span class = "code token closecurly">}</span><span class = "code token openparen">(</span><span class = "code token identifier">t</span><span class = "code token colon">:</span><span class = "code"> </span><span class = "code token identifier type">T</span><span class = "code token closeparen">)</span><span class = "code"> </span><span class = "code token operator">-></span><span class = "code"> </span><span class = "code token openparen type">(</span><span class = "code token identifier type">T</span><span class = "code token operator type">,</span><span class = "code"> </span><span class = "code token identifier type">T</span><span class = "code token closeparen type">)</span><span class = "code token colon">:</span><span class = "code"> </span><span class = "code token keyword">return</span><span class = "code"> </span><span class = "code token openparen">(</span><span class = "code token identifier">t</span><span class = "code token operator">,</span><span class = "code"> </span><span class = "code token identifier">t</span><span class = "code token closeparen">)</span><span class = ""></span><span class = "code token keyword">fn</span><span class = "code"> </span><span class = "code token identifier">main</span><span class = "code token openparen">(</span><span class = "code token closeparen">)</span><span class = "code token colon">:</span><span class = "code"> </span><span class = "code token keyword">print</span><span class = "code"> </span><span class = "code token identifier">double</span><span class = "code token openparen">(</span><span class = "code token const">1</span><span class = "code token closeparen">)</span><span class = "code"> </span><span class = "code token keyword">print</span><span class = "code"> </span><span class = "code token identifier">double</span><span class = "code token openparen">(</span><span class = "code token openparen">(</span><span class = "code token keyword">false</span><span class = "code token operator">,</span><span class = "code"> </span><span class = "code token keyword">true</span><span class = "code token closeparen">)</span><span class = "code token closeparen">)</span><span class = "code"> </span><span class = "code token keyword">print</span><span class = "code"> </span><span class = "code token identifier">double</span><span class = "code token opencurly">{</span><span class = "code token identifier type">_</span><span class = "code token closecurly">}</span><span class = "code token openparen">(</span><span class = "code token openparen">(</span><span class = "code token keyword">false</span><span class = "code token operator">,</span><span class = "code"> </span><span class = "code token keyword">true</span><span class = "code token closeparen">)</span><span class = "code token closeparen">)</span><span class = "code"> </span><span class = "code token keyword">print</span><span class = "code"> </span><span class = "code token identifier">double</span><span class = "code token opencurly">{</span><span class = "code token openparen type">(</span><span class = "code token identifier type">_</span><span class = "code token operator type">,</span><span class = "code"> </span><span class = "code token identifier type">bool</span><span class = "code token closeparen type">)</span><span class = "code token closecurly">}</span><span class = "code token openparen">(</span><span class = "code token openparen">(</span><span class = "code token keyword">false</span><span class = "code token operator">,</span><span class = "code"> </span><span class = "code token keyword">true</span><span class = "code token closeparen">)</span><span class = "code token closeparen">)</span></code>
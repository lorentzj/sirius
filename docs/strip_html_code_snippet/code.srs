<div class="code_line" data-line="1"><span class="code token keyword" data-token-id="0" data-char-start="0" data-char-end="2">fn</span><span class="code" data-char-start="2" data-char-end="3"> </span><span class="code token identifier" data-token-id="1" data-char-start="3" data-char-end="9">double</span><span class="code token opencurly" data-token-id="2" data-char-start="9" data-char-end="10">{</span><span class="code token identifier type" data-token-id="3" data-char-start="10" data-char-end="11">T</span><span class="code token closecurly" data-token-id="4" data-char-start="11" data-char-end="12">}</span><span class="code token openparen" data-token-id="5" data-char-start="12" data-char-end="13">(</span><span class="code token identifier" data-token-id="6" data-char-start="13" data-char-end="14">t</span><span class="code token colon" data-token-id="7" data-char-start="14" data-char-end="15">:</span><span class="code" data-char-start="15" data-char-end="16"> </span><span class="code token identifier type" data-token-id="8" data-char-start="16" data-char-end="17">T</span><span class="code token closeparen" data-token-id="9" data-char-start="17" data-char-end="18">)</span><span class="code token colon" data-token-id="10" data-char-start="18" data-char-end="19">:</span><span class="code" data-char-start="19" data-char-end="20"> </span><span class="code token openparen type" data-token-id="11" data-char-start="20" data-char-end="21">(</span><span class="code token identifier type" data-token-id="12" data-char-start="21" data-char-end="22">T</span><span class="code token operator type" data-token-id="13" data-char-start="22" data-char-end="23">,</span><span class="code" data-char-start="23" data-char-end="24"> </span><span class="code token identifier type" data-token-id="14" data-char-start="24" data-char-end="25">T</span><span class="code token closeparen type" data-token-id="15" data-char-start="25" data-char-end="26">)</span><span class="code" data-char-start="26" data-char-end="27"> </span><span class="code token opencurly" data-token-id="16" data-char-start="27" data-char-end="28">{</span></div><div class="code_line" data-line="2"><span class="code" data-char-start="0" data-char-end="4">    </span><span class="code token keyword" data-token-id="17" data-char-start="4" data-char-end="10">return</span><span class="code" data-char-start="10" data-char-end="11"> </span><span class="code token openparen" data-token-id="18" data-char-start="11" data-char-end="12">(</span><span class="code token identifier" data-token-id="19" data-char-start="12" data-char-end="13" title="T">t</span><span class="code token operator" data-token-id="20" data-char-start="13" data-char-end="14">,</span><span class="code" data-char-start="14" data-char-end="15"> </span><span class="code token identifier" data-token-id="21" data-char-start="15" data-char-end="16" title="T">t</span><span class="code token closeparen" data-token-id="22" data-char-start="16" data-char-end="17">)</span><span class="code token semicolon" data-token-id="23" data-char-start="17" data-char-end="18">;</span></div><div class="code_line" data-line="3"><span class="code token closecurly" data-token-id="24" data-char-start="0" data-char-end="1">}</span></div><div class="code_line" data-line="4"><br data-sentinel="true"></div><div class="code_line" data-line="5"><span class="code token keyword" data-token-id="25" data-char-start="0" data-char-end="2">fn</span><span class="code" data-char-start="2" data-char-end="3"> </span><span class="code token identifier" data-token-id="26" data-char-start="3" data-char-end="7">main</span><span class="code token openparen" data-token-id="27" data-char-start="7" data-char-end="8">(</span><span class="code token closeparen" data-token-id="28" data-char-start="8" data-char-end="9">)</span><span class="code" data-char-start="9" data-char-end="10"> </span><span class="code token opencurly" data-token-id="29" data-char-start="10" data-char-end="11">{</span></div><div class="code_line" data-line="6"><span class="code" data-char-start="0" data-char-end="4">    </span><span class="code token keyword" data-token-id="30" data-char-start="4" data-char-end="9">print</span><span class="code" data-char-start="9" data-char-end="10"> </span><span class="code token identifier" data-token-id="31" data-char-start="10" data-char-end="16" title="i64(ind=1)->(i64(ind=1), i64(ind=1))">double</span><span class="code token openparen" data-token-id="32" data-char-start="16" data-char-end="17">(</span><span class="code token const" data-token-id="33" data-char-start="17" data-char-end="18" title="i64(ind=1)">1</span><span class="code token closeparen" data-token-id="34" data-char-start="18" data-char-end="19">)</span><span class="code token semicolon" data-token-id="35" data-char-start="19" data-char-end="20">;</span></div><div class="code_line" data-line="7"><span class="code" data-char-start="0" data-char-end="4">    </span><span class="code token keyword" data-token-id="36" data-char-start="4" data-char-end="9">print</span><span class="code" data-char-start="9" data-char-end="10"> </span><span class="code token identifier" data-token-id="37" data-char-start="10" data-char-end="16" title="forall d, d, d . d->forall d, d . (d, d)">double</span><span class="code token openparen" data-token-id="38" data-char-start="16" data-char-end="17">(</span><span class="code token openparen" data-token-id="39" data-char-start="17" data-char-end="18">(</span><span class="code token keyword" data-token-id="40" data-char-start="18" data-char-end="23" title="bool">false</span><span class="code token operator" data-token-id="41" data-char-start="23" data-char-end="24">,</span><span class="code" data-char-start="24" data-char-end="25"> </span><span class="code token keyword" data-token-id="42" data-char-start="25" data-char-end="29" title="bool">true</span><span class="code token closeparen" data-token-id="43" data-char-start="29" data-char-end="30">)</span><span class="code token closeparen" data-token-id="44" data-char-start="30" data-char-end="31">)</span><span class="code token semicolon" data-token-id="45" data-char-start="31" data-char-end="32">;</span></div><div class="code_line" data-line="8"><span class="code token closecurly" data-token-id="46" data-char-start="0" data-char-end="1">}</span></div>